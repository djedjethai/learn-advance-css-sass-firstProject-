.navigation {
    &__checkbox {
        display: none;
    }
    &__button {
        background-color: $color-white;
        // we add 1rem more than the __background, to cover it completely
        height: 7rem;
        width: 7rem;
        position: fixed;
        // we position it with a little dacalage from the __backgroud pour repartir parfaitement l'extra-size
        top: 6rem;
        right: 6rem;
        border-radius: 50%;
        z-index: 2000;
        box-shadow: 0 1rem 3rem rgba($color-black, .1);
        text-align: center;
        cursor: pointer;
    }
    &__background {
        height: 6rem;
        width: 6rem;
        border-radius: 50%;
        position: fixed;
        top: 6.5rem;
        right: 6.5rem;
        // radial-gradient est un degrader from one point(here center) to all around
        background-image: radial-gradient($color-primary-light, $color-primary-dark);
        z-index: 1000;
        //des que l on declanchera le transform ce __background will scale and occupy the whole space
        // transform: scale(80);
        // this cubic-bezier sert a modifier la vitesse de la transformation par periode
        transition: transform .8s cubic-bezier(0.86, 0, 0.07, 1);
    }
    &__nav {
        height: 100vh;
        position: fixed;
        top: 0;
        left: 0; // a voir.........
        z-index: 1500;
        opacity: 0;
        // with opacity like it, we make the nav desapear but the link are still here (mean even we dont see them)
        // we still can click them, so we do
        width: 0;
        transition: all .8s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    }
    &__list {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        list-style: none;
        text-align: center;
        // take 100% of the parent elmt. BUT in fact, without doing this when the backgroud comes up the list appear as well
        // width: 100%;
    }
    &__item {
        margin: 1rem;
    }
    &__link {
        &:link,
        &:visited {
            display: inline-block;
            font-size: 3rem;
            font-weight: 300;
            padding: 1rem 2rem;
            color: $color-white;
            text-decoration: none;
            text-transform: uppercase;
            background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
            background-size: 220%; // 100% est l'equivalemnt de cover. we we set it at 200% to move it and get an effect
            transition: all .4s;
            // should not do that but as all is already setted up we are not gonna change all
            span {
                display: inline-block;
                margin-right: 1.5rem;
            }
        }
        &:active,
        &:hover {
            background-position: 100%;
            color: $color-primary;
            transform: translateX(1rem);
        }
    }
    // FONCTIONALITY
    // ~ that is the sibling selecteur
    // qd checkbox is checked we select background elmt (via ~) and scale it 80 times
    &__checkbox:checked~&__background {
        transform: scale(80);
    }
    &__checkbox:checked~&__nav {
        opacity: 1;
        width: 100%; // as we set the height at 100vh, it does not need to precise the width. this elmt occupera tout le vh
    }
    // ICON 
    &__icon {
        position: relative;
        margin-top: 3.5rem;
        &,
        &::before,
        &::after {
            width: 3rem;
            height: 2px;
            background-color: $color-grey-dark-3;
            display: inline-block;
        }
        // !!! FOR THE SUDO ELEMENT TO APPEAR, THEIR CONTENT HAVE TO BE DEFINE
        &::before,
        &::after {
            content: '';
            position: absolute;
            left: 0;
            transition: all .2s;
        }
        &::before {
            top: -.8rem;
        }
        &::after {
            top: .8rem;
        }
    }
    // can do it this way bc icon is a child element of button
    &__button:hover &__icon::before {
        top: -1;
    }
    &__button:hover &__icon::after {
        top: 1;
    }
    // + because it s an adjacent sibling. and then &__icon as it's a child of &__button
    &__checkbox:checked+&__button &__icon {
        top: 0;
        background-color: transparent;
    }
    &__checkbox:checked+&__button &__icon::before {
        top: 0;
        // transform: rotate(45deg); that s works but the following one is better.
        transform: rotate(135deg);
    }
    &__checkbox:checked+&__button &__icon::after {
        top: 0;
        // transform: rotate(-45deg);
        transform: rotate(-135deg);
    }
}